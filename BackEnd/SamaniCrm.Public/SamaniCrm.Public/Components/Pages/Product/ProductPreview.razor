@page "/product/{culture}/{Slug}"
@page "/product/{Slug}"

@using MediatR
@using SamaniCrm.Application.ProductManager.Queries
@using SamaniCrm.Application.ProductManagerManager.Dtos
@using SamaniCrm.Core.Shared.Interfaces
@using SamaniCrm.Domain.Entities.ProductEntities
@inject IMediator Mediator
@inject ILocalizer L


<PageTitle>@product.Title</PageTitle>
<h1>@L["HomePage.Title"]</h1>
<h2> 
  <span>@L["Price"]:</span>  
  @if ( product.Price>0)
       {
 
        <b>@(product.Price.ToString(product.Price % 1 == 0 ? "N0" : "N"))</b>
    }
    else
    {
        <b>@L["Free"]</b>
    }
</h2>

<h3>@product.Description</h3>
<div class="tag-list">
    @foreach (var item in tagList)
    {
        <span class="tag">@item</span>
    }
</div>

<div class="table-responsive">
    <table class="table table-hover">
        <tbody>
            @foreach (var item in product.AttributeValues)
            {
                <tr>
                    <td>@item.Title</td>
                    <td>
                        @if (item.DataType == ProductAttributeDataTypeEnum.Color)
                        {
                            <span style="background-color:@item.Value" class="tag-color"></span>
                        }
                        else if (item.DataType == ProductAttributeDataTypeEnum.Decimal || item.DataType == ProductAttributeDataTypeEnum.Int)
                        {
                            if (decimal.TryParse(item.Value, out var numVal))
                            {
                                <span>@(numVal.ToString(item.DataType == ProductAttributeDataTypeEnum.Int || numVal % 1 == 0 ? "N0" : "N"))</span>
                            }
                            else
                            {
                                <span>@item.Value</span>
                            }
                        }  
                        else if(item.DataType == ProductAttributeDataTypeEnum.Bool){
                            <span>
                                @if(item.Value is "true")
                                {
                                    @* @L["Yes"] *@
                                }
                                else
                                {
                                    @* @L["No"] *@
                                    
                                }
                            </span>
                         
                        }
                        else
                        {
                            <span>
                                @item.Value
                            </span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@((MarkupString)product.Content)



@code {
    [Parameter]
    public string? Culture { get; set; }
    [Parameter]
    public string Slug { get; set; } = "";
    ProductInfoDto product = new();
    List<string> tagList = [];

    protected override async Task OnInitializedAsync()
    {
         var culture = Culture ?? L.CurrentLanguage;
        product = await Mediator.Send(new GetProductInfoQuery(Slug, culture));
        tagList = product.Tags != null ? product.Tags.Split(",", StringSplitOptions.RemoveEmptyEntries).ToList() : [];

    }


}



<style>
    .tag-color {
        width: 40px;
        height: 40px;
        display: inline-block;
        border-radius: 100px;
        border: 1px #858585 solid;
    }

    .tag-list {
        display: flex;
        align-items: center;
        flex-wrap: wrap;
        gap: 6px;
    }

        .tag-list .tag {
            background-color: #ecbcbc;
            padding: 2px 10px;
            border-radius: 6px;
        }
</style>