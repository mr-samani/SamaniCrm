/**
 * SamaniCrm API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { NotificationPeriorityEnum } from './notification-periority-enum';
import { NotificationTypeEnum } from './notification-type-enum';


/* Created with custom template by mohammadreza SAMANI*/

/** Interface for GetAllNotificationQuery */
export interface IGetAllNotificationQuery {
  pageNumber?: number;
  pageSize?: number;
  sortBy?: string;
  sortDirection?: string;
  filter?: string;
  fromDate?: string;
  toDate?: string;
  type?: Array<NotificationTypeEnum>;
  periority?: Array<NotificationPeriorityEnum>;
}

/** Class for GetAllNotificationQuery */
export class GetAllNotificationQuery implements IGetAllNotificationQuery {
  pageNumber?: number;
  pageSize?: number;
  sortBy?: string;
  sortDirection?: string;
  filter?: string;
  fromDate?: string;
  toDate?: string;
  type?: Array<NotificationTypeEnum>;
  periority?: Array<NotificationPeriorityEnum>;

  constructor(data?: IGetAllNotificationQuery) {
    if (data) {
      for (let property in data) {
        if (data.hasOwnProperty(property))
          (this as any)[property] = (data as any)[property];
      }
    }
  }

init(data?: any) {
  if (data) {
    this.pageNumber = data["pageNumber"];
    this.pageSize = data["pageSize"];
    this.sortBy = data["sortBy"];
    this.sortDirection = data["sortDirection"];
    this.filter = data["filter"];
    this.fromDate = data["fromDate"];
    this.toDate = data["toDate"];
    if (Array.isArray(data["type"])) {
      this.type = [] as any;
      for (let item of data["type"])
        (this.type as any).push(item);
    }
    if (Array.isArray(data["periority"])) {
      this.periority = [] as any;
      for (let item of data["periority"])
        (this.periority as any).push(item);
    }
  }
}

  static fromJS(data: any): GetAllNotificationQuery {
    const instance = new GetAllNotificationQuery();
    instance.init(data);
    return instance;
  }
}


