/**
 * SamaniCrm API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { MenuTranslationsDTO } from './menu-translations-dto';
import { MenuDTO } from './menu-dto';
import { MenuTargetEnum } from './menu-target-enum';


/* Created with custom template by mohammadreza SAMANI*/

/** Interface for CreateOrEditMenuCommand */
export interface ICreateOrEditMenuCommand {
  id?: string;
  title?: string;
  icon?: string;
  url?: string;
  orderIndex?: number;
  isActive?: boolean;
  isSystem?: boolean;
  parentId?: string;
  target?: MenuTargetEnum;
  children?: Array<MenuDTO>;
  translations?: Array<MenuTranslationsDTO>;
}

/** Class for CreateOrEditMenuCommand */
export class CreateOrEditMenuCommand implements ICreateOrEditMenuCommand {
  id?: string;
  title?: string;
  icon?: string;
  url?: string;
  orderIndex?: number;
  isActive?: boolean;
  isSystem?: boolean;
  parentId?: string;
  target?: MenuTargetEnum;
  children?: Array<MenuDTO>;
  translations?: Array<MenuTranslationsDTO>;

  constructor(data?: ICreateOrEditMenuCommand) {
    if (data) {
      for (let property in data) {
        if (data.hasOwnProperty(property))
          (this as any)[property] = (data as any)[property];
      }
    }
  }

init(data?: any) {
  if (data) {
    this.id = data["id"];
    this.title = data["title"];
    this.icon = data["icon"];
    this.url = data["url"];
    this.orderIndex = data["orderIndex"];
    this.isActive = data["isActive"];
    this.isSystem = data["isSystem"];
    this.parentId = data["parentId"];
    this.target = data["target"];
    if (Array.isArray(data["children"])) {
      this.children = [] as any;
      for (let item of data["children"])
        (this.children as any).push(MenuDTO.fromJS(item));
    }
    if (Array.isArray(data["translations"])) {
      this.translations = [] as any;
      for (let item of data["translations"])
        (this.translations as any).push(MenuTranslationsDTO.fromJS(item));
    }
  }
}

  static fromJS(data: any): CreateOrEditMenuCommand {
    const instance = new CreateOrEditMenuCommand();
    instance.init(data);
    return instance;
  }
}


