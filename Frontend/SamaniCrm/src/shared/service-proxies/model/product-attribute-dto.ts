/**
 * SamaniCrm API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ProductAttributeDataTypeEnum } from './product-attribute-data-type-enum';
import { ProductAttributeTranslationDto } from './product-attribute-translation-dto';


/**
 * SamaniCrm API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/* Created with custom template */

/** Interface for ProductAttributeDto */
export interface IProductAttributeDto {
  id?: string;
  productTypeId?: string;
  name?: string;
  dataType?: ProductAttributeDataTypeEnum;
  isRequired?: boolean;
  isVariant?: boolean;
  sortOrder?: number;
  translations?: Array<ProductAttributeTranslationDto>;
}

/** Class for ProductAttributeDto */
export class ProductAttributeDto implements IProductAttributeDto {
  id?: string;
  productTypeId?: string;
  name?: string;
  dataType?: ProductAttributeDataTypeEnum;
  isRequired?: boolean;
  isVariant?: boolean;
  sortOrder?: number;
  translations?: Array<ProductAttributeTranslationDto>;

  constructor(data?: IProductAttributeDto) {
    if (data) {
      for (let property in data) {
        if (data.hasOwnProperty(property))
          (this as any)[property] = (data as any)[property];
      }
    }
  }

init(data?: any) {
  if (data) {
    this.id = data["id"];
    this.productTypeId = data["productTypeId"];
    this.name = data["name"];
    this.dataType = data["dataType"];
    this.isRequired = data["isRequired"];
    this.isVariant = data["isVariant"];
    this.sortOrder = data["sortOrder"];
    if (Array.isArray(data["translations"])) {
      this.translations = [] as any;
      for (let item of data["translations"])
        (this.translations as any).push(ProductAttributeTranslationDto.fromJS(item));
    }
  }
}

  static fromJS(data: any): ProductAttributeDto {
    const instance = new ProductAttributeDto();
    instance.init(data);
    return instance;
  }
}


