/**
 * SamaniCrm API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ProductTypeTranslationDto } from './product-type-translation-dto';
import { ProductAttributeDto } from './product-attribute-dto';


/**
 * SamaniCrm API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/* Created with custom template */

/** Interface for CreateOrUpdateProductTypeCommand */
export interface ICreateOrUpdateProductTypeCommand {
  id?: string;
  tenantId?: string;
  attributes?: Array<ProductAttributeDto>;
  culture?: string;
  name?: string;
  description?: string;
  translations?: Array<ProductTypeTranslationDto>;
}

/** Class for CreateOrUpdateProductTypeCommand */
export class CreateOrUpdateProductTypeCommand implements ICreateOrUpdateProductTypeCommand {
  id?: string;
  tenantId?: string;
  attributes?: Array<ProductAttributeDto>;
  culture?: string;
  name?: string;
  description?: string;
  translations?: Array<ProductTypeTranslationDto>;

  constructor(data?: ICreateOrUpdateProductTypeCommand) {
    if (data) {
      for (let property in data) {
        if (data.hasOwnProperty(property))
          (this as any)[property] = (data as any)[property];
      }
    }
  }

init(data?: any) {
  if (data) {
    this.id = data["id"];
    this.tenantId = data["tenantId"];
    if (Array.isArray(data["attributes"])) {
      this.attributes = [] as any;
      for (let item of data["attributes"])
        (this.attributes as any).push(ProductAttributeDto.fromJS(item));
    }
    this.culture = data["culture"];
    this.name = data["name"];
    this.description = data["description"];
    if (Array.isArray(data["translations"])) {
      this.translations = [] as any;
      for (let item of data["translations"])
        (this.translations as any).push(ProductTypeTranslationDto.fromJS(item));
    }
  }
}

  static fromJS(data: any): CreateOrUpdateProductTypeCommand {
    const instance = new CreateOrUpdateProductTypeCommand();
    instance.init(data);
    return instance;
  }
}


